# -*- coding: utf-8 -*-
"""Kilav1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17w_n7dCxQgiPt3PxrOLhqiBn87uipIo7
"""

# KiLA - Fancy Fashion App using Streamlit
# Phase 1: Basic App UI + Product Purchase + Stock Update (No CSV)

import streamlit as st
from PIL import Image
from datetime import datetime
import base64
import uuid

# Initialize Session State
if 'cart' not in st.session_state:
    st.session_state.cart = []

if 'stock' not in st.session_state:
    # Sample in-memory stock database
    st.session_state.stock = [
        {"id": "P001", "name": "Pastel Saree", "price": 799, "stock": 5, "image": "https://i.pinimg.com/1200x/19/a2/9d/19a29d5e12dc17c95e278f6f3700bfce.jpg"},
        {"id": "P002", "name": "Embroidered Kurti", "price": 599, "stock": 3, "image": "https://i.pinimg.com/564x/74/71/fb/7471fbb02d64082a5e6a44a3b1ce6a0c.jpg"},
        {"id": "P003", "name": "Western Maxi", "price": 1099, "stock": 2, "image": "https://i.pinimg.com/736x/4a/41/ff/4a41ff6cd90f1cce560d0c7d33ef83e0.jpg"},
    ]

# App Title
st.markdown("""
    <h1 style='text-align:center; color:#d63384;'>KiLA - Trendy Fashion for You ✨</h1>
""", unsafe_allow_html=True)

# Display Products
st.subheader("🛍️ Products")
cols = st.columns(3)
for idx, product in enumerate(st.session_state.stock):
    with cols[idx % 3]:
        st.image(product['image'], width=200)
        st.markdown(f"**{product['name']}**")
        st.markdown(f"₹{product['price']} | Stock: {product['stock']}")
        if product['stock'] > 0:
            if st.button(f"Add to Cart 🛒 ({product['id']})"):
                st.session_state.cart.append(product['id'])
                st.success(f"Added {product['name']} to cart")
        else:
            st.warning("Out of Stock")

# Cart & Billing Section
st.markdown("---")
st.subheader("🧾 Your Cart")

if st.session_state.cart:
    total = 0
    cart_items = {}
    for pid in st.session_state.cart:
        cart_items[pid] = cart_items.get(pid, 0) + 1

    for pid, qty in cart_items.items():
        product = next((p for p in st.session_state.stock if p['id'] == pid), None)
        if product:
            st.markdown(f"**{product['name']}** x {qty} = ₹{product['price'] * qty}")
            total += product['price'] * qty

    st.markdown(f"### 💰 Total: ₹{total}")

    if st.button("Make Payment 💳"):
        # Decrease stock
        for pid, qty in cart_items.items():
            product = next((p for p in st.session_state.stock if p['id'] == pid), None)
            if product:
                product['stock'] -= qty

        # Generate invoice
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        invoice = f"""Invoice ID: {uuid.uuid4()}
Date: {now}

Items:\n"""
        for pid, qty in cart_items.items():
            product = next((p for p in st.session_state.stock if p['id'] == pid), None)
            invoice += f"- {product['name']} x {qty} = ₹{product['price'] * qty}\n"
        invoice += f"\nTotal: ₹{total}"

        b64 = base64.b64encode(invoice.encode()).decode()
        href = f'<a href="data:file/txt;base64,{b64}" download="kila_invoice.txt">📥 Download Invoice</a>'
        st.markdown(href, unsafe_allow_html=True)

        st.success("Payment successful! Thank you for shopping with KiLA 💖")
        st.session_state.cart.clear()
else:
    st.info("🛒 Your cart is empty.")